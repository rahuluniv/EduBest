{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project Requirement","text":""},{"location":"#document-for-rcat-migration-to-django-and-nextjs","title":"Document for RCAT Migration to Django and Next.js","text":""},{"location":"#executive-summary","title":"Executive Summary","text":"<p>RCAT is transitioning its existing web application infrastructure to a more scalable and modern architecture using Django for the backend and Next.js for the frontend. This migration aims to enhance the platform's performance, improve user experience, and streamline the development process. RCAT provides a comprehensive suite of tools for schools to manage educational content, assessments, and track student progress across various grades and subjects, with a focus on reading comprehension and vocabulary skills.</p>"},{"location":"#project-glossary","title":"Project Glossary","text":"<ul> <li>Django: A high-level Python Web framework that encourages rapid development and clean, pragmatic design.</li> <li>Next.js: A React framework for production that provides server-side rendering, static site generation, and more, to ensure fast, scalable, and easy-to-deploy applications.</li> <li>Administrator (RCAT Main Admin): Users responsible for overseeing and managing the RCAT platform, including schools, districts, regions, and system settings.</li> <li>District Administrator: Users with administrative rights over a specific district, responsible for managing schools and educators within their district.</li> <li>Educator/Teacher: Users who create, manage, and distribute assessments and educational content.</li> <li>Student: Users who participate in assessments and access educational content.</li> <li>API: Application Programming Interface, a set of protocols and tools for building software and applications.</li> <li>JWT: JSON Web Tokens, a method for securely transmitting information between parties as a JSON object.</li> </ul>"},{"location":"#user-stories","title":"User Stories","text":""},{"location":"#administrator-portal-rcat-main-admin","title":"Administrator Portal (RCAT Main Admin)","text":""},{"location":"#phase-1","title":"Phase 1","text":""},{"location":"#user-story-school-and-district-management","title":"User Story: School and District Management","text":"<p>As the RCAT main admin, I want to add schools, whitelist domains, and manage regions and districts to ensure schools can access RCAT efficiently.</p> <p>Acceptance Tests:</p> <ol> <li>Admin can add and manage school profiles, including whitelisting domains.</li> <li>Admin can create and organize districts and regions, linking schools appropriately.</li> <li>System supports adding district administrators with specific management permissions.</li> </ol>"},{"location":"#user-story-test-and-skill-management","title":"User Story: Test and Skill Management","text":"<p>As the RCAT main admin, I want to manage the skills and tests available on the platform to ensure they meet educational standards and requirements.</p> <p>Acceptance Tests:</p> <ol> <li>Admin can add, modify, or remove skills and categories related to reading comprehension and vocabulary.</li> <li>The platform allows for categorization of questions in tests by genres, including informational, narrative, poetry, and tier 2 vocabulary.</li> <li>Admin can create and manage a repository of tests, including the ability to add passages, questions, and math problems with a math editor.</li> </ol>"},{"location":"#educator-portal","title":"Educator Portal","text":""},{"location":"#phase-1_1","title":"Phase 1","text":""},{"location":"#user-story-assessment-creation-and-distribution","title":"User Story: Assessment Creation and Distribution","text":"<p>As an educator, I want to create assessments from existing tests or create new ones to evaluate my students' progress in specific skills.</p> <p>Acceptance Tests:</p> <ol> <li>Educators can select from a pool of existing tests or create new tests tailored to their classroom needs.</li> <li>The test creation interface supports adding various question types, including multiple-choice, fill-in-the-blanks, and math problems.</li> <li>Educators can assign tests to students, schedule test availability, and track completion.</li> </ol>"},{"location":"#user-story-student-progress-monitoring","title":"User Story: Student Progress Monitoring","text":"<p>As an educator, I want to monitor my students' progress and performance on tests to provide targeted support and feedback.</p> <p>Acceptance Tests:</p> <ol> <li>Educators have access to detailed reports on student test performances, including scores and skill evaluations.</li> <li>The platform provides analytics on class-wide performance trends and individual student progress.</li> <li>Educators can identify areas of improvement and strengths, facilitating personalized feedback and support.</li> </ol>"},{"location":"#student-portal","title":"Student Portal","text":""},{"location":"#phase-1_2","title":"Phase 1","text":""},{"location":"#user-story-accessing-and-completing-assessments","title":"User Story: Accessing and Completing Assessments","text":"<p>As a student, I want to access and complete assessments assigned to me to demonstrate my understanding and skills.</p> <p>Acceptance Tests:</p> <ol> <li>Students can easily find and access assigned tests within their portal.</li> <li>The testing interface is user-friendly, supporting various question types and including a math editor for relevant problems.</li> <li>Students receive immediate feedback upon completion, including scores and correct answers for review.</li> </ol>"},{"location":"#user-story-tracking-learning-progress","title":"User Story: Tracking Learning Progress","text":"<p>As a student, I want to track my progress and performance over time to understand my learning growth and areas for improvement.</p> <p>Acceptance Tests:</p> <ol> <li>Students have access to a dashboard summarizing their performance on recent tests.</li> <li>The platform tracks and displays progress in various skills over time, highlighting strengths and areas for improvement.</li> <li>Students can set personal learning goals and monitor their advancement towards these goals.</li> </ol>"},{"location":"#moscow-prioritization","title":"MoSCoW Prioritization","text":""},{"location":"#must-have","title":"Must Have","text":"<ol> <li>A Django-based backend with RESTful API endpoints for school, district, and test management.</li> <li>A Next.js-based frontend with intuitive interfaces for administrators, educators</li> </ol> <p>, and students. 3. Secure authentication and authorization processes, including JWT for API access and domain whitelisting for school access. 4. Comprehensive role management for administrators, district administrators, educators, and students.</p>"},{"location":"#should-have","title":"Should Have","text":"<ol> <li>Advanced analytics and reporting tools for tracking student progress and performance.</li> <li>A math editor for creating and solving math problems within assessments.</li> <li>Customizable test creation tools, allowing for a wide range of question types and content.</li> </ol>"},{"location":"#could-have","title":"Could Have","text":"<ol> <li>Integration with external educational resources and content providers.</li> <li>Gamification elements for student engagement and motivation.</li> <li>Personalized learning recommendations based on student performance and progress.</li> </ol>"},{"location":"#wont-have-at-launch","title":"Won't Have (at launch)","text":"<ol> <li>Real-time collaboration tools for students and educators.</li> <li>Blockchain-based credentialing and record-keeping for educational achievements.</li> <li>A mobile app version of the platform for enhanced accessibility and engagement.</li> </ol>"},{"location":"#technical-resources","title":"Technical Resources","text":""},{"location":"#backend-development","title":"Backend Development","text":"<ul> <li>Framework: Django</li> <li>Django Documentation</li> <li>Database: PostgreSQL</li> <li>PostgreSQL Documentation</li> <li>Authentication: Django Rest Framework SimpleJWT</li> <li>DRF SimpleJWT Documentation</li> </ul>"},{"location":"#frontend-development","title":"Frontend Development","text":"<ul> <li>Framework: Next.js</li> <li>Next.js Documentation</li> <li>State Management: Redux or Context API</li> <li>Redux Documentation</li> <li>React Context Documentation</li> <li>Styling: Tailwind CSS or Styled-Components</li> <li>Tailwind CSS Documentation</li> <li>Styled-Components Documentation</li> </ul>"},{"location":"#deployment-and-operations","title":"Deployment and Operations","text":"<ul> <li>Cloud Hosting: AWS or Vercel</li> <li>AWS Documentation</li> <li>Vercel Documentation</li> <li>CI/CD: GitHub Actions</li> <li>GitHub Actions Documentation</li> </ul>"},{"location":"#divided-user-stories","title":"Divided User Stories","text":""},{"location":"#administrator-portal-rcat-main-admin_1","title":"Administrator Portal (RCAT Main Admin)","text":""},{"location":"#school-and-district-management","title":"School and District Management","text":"<ol> <li>Add New School<ul> <li>As an RCAT admin, I can add new schools to the platform to expand its reach and utility.</li> </ul> </li> <li>Whitelist School Domains<ul> <li>As an RCAT admin, I can whitelist school domains to ensure secure and exclusive access to the platform.</li> </ul> </li> <li>Create Districts<ul> <li>As an RCAT admin, I can create districts, organizing schools within specific geographical or administrative boundaries.</li> </ul> </li> <li>Assign Schools to Districts<ul> <li>As an RCAT admin, I can assign schools to their respective districts for better regional management.</li> </ul> </li> <li>Add District Administrator<ul> <li>As an RCAT admin, I can add district administrators to delegate management responsibilities within specific districts.</li> </ul> </li> </ol>"},{"location":"#test-and-skill-management","title":"Test and Skill Management","text":"<ol> <li>Add Skills<ul> <li>As an RCAT admin, I can add new skills to the test database to keep the curriculum up-to-date with educational standards.</li> </ul> </li> <li>Edit Skills<ul> <li>As an RCAT admin, I can edit existing skills to ensure accuracy and relevancy.</li> </ul> </li> <li>Delete Skills<ul> <li>As an RCAT admin, I can delete outdated or irrelevant skills from the platform.</li> </ul> </li> <li>Create Test Templates<ul> <li>As an RCAT admin, I can create test templates that educators can use or modify for their assessments.</li> </ul> </li> <li>Categorize Test Questions<ul> <li>As an RCAT admin, I can categorize test questions by genre (e.g., informational, narrative) to facilitate targeted assessments.</li> </ul> </li> </ol>"},{"location":"#platform-configuration-and-security","title":"Platform Configuration and Security","text":"<ol> <li>Configure Test Settings<ul> <li>As an RCAT admin, I can configure settings for tests, including time limits and availability windows.</li> </ul> </li> <li>Manage User Roles and Permissions<ul> <li>As an RCAT admin, I can manage user roles and permissions to ensure secure access to the platform's features.</li> </ul> </li> <li>Monitor Platform Usage<ul> <li>As an RCAT admin, I can monitor platform usage statistics to understand adoption rates and user engagement.</li> </ul> </li> <li>Update Platform Security<ul> <li>As an RCAT admin, I can update security protocols to protect user data and ensure compliance with privacy regulations.</li> </ul> </li> <li>Backup and Restore Data<ul> <li>As an RCAT admin, I can perform data backup and restoration to prevent data loss and maintain platform integrity.</li> </ul> </li> </ol>"},{"location":"#educator-portal_1","title":"Educator Portal","text":""},{"location":"#assessment-management","title":"Assessment Management","text":"<ol> <li>Select Test Template<ul> <li>As an educator, I can select from existing test templates to quickly create assessments.</li> </ul> </li> <li>Customize Test Questions<ul> <li>As an educator, I can customize test questions, adding or removing items based on my students' needs.</li> </ul> </li> <li>Assign Tests to Students<ul> <li>As an educator, I can assign tests to individual students or classes, scheduling them according to the lesson plan.</li> </ul> </li> <li>Review Test Submissions<ul> <li>As an educator, I can review test submissions, providing feedback and grades to students.</li> </ul> </li> <li>Track Student Progress<ul> <li>As an educator, I can track student progress on assessments over time to identify learning trends and areas for improvement.</li> </ul> </li> </ol>"},{"location":"#student-portal_1","title":"Student Portal","text":""},{"location":"#engagement-with-assessments","title":"Engagement with Assessments","text":"<ol> <li>Access Assigned Tests<ul> <li>As a student, I can access tests assigned to me, viewing due dates and instructions.</li> </ul> </li> <li>Complete Online Tests<ul> <li>As a student, I can complete online tests, using tools like the math editor for specific questions.</li> </ul> </li> <li>View Test Feedback<ul> <li>As a student, I can view feedback and grades on completed tests to understand my performance.</li> </ul> </li> <li>Track Personal Learning Progress<ul> <li>As a student, I can track my learning progress through a dashboard, viewing my achievements and areas for growth.</li> </ul> </li> <li>Set Personal Learning Goals<ul> <li>As a student, I can set personal learning goals and monitor my progress toward achieving them.</li> </ul> </li> </ol>"},{"location":"DatabaseDesign/","title":"Database Design","text":""},{"location":"DatabaseDesign/#database-schema-overview","title":"Database Schema Overview","text":"<p>The proposed database schema is designed to support the RCAT platform's core functionalities, including managing schools, districts, users (administrators, district administrators, educators, and students), tests, skills, and user progress tracking. The database will be built using PostgreSQL, considering its robustness, scalability, and compatibility with Django.</p>"},{"location":"DatabaseDesign/#entities-and-relationships","title":"Entities and Relationships","text":"<ol> <li> <p>Users</p> <ul> <li>Attributes: UserID, FirstName, LastName, Email, Role (Enum: Admin, DistrictAdmin, Educator, Student), PasswordHash, LastLogin, IsActive</li> <li>Relationships: One-to-many with Schools (for DistrictAdmin and Educator), one-to-many with Tests (for Educator)</li> </ul> </li> <li> <p>Schools</p> <ul> <li>Attributes: SchoolID, Name, Domain, DistrictID, Region</li> <li>Relationships: Many-to-one with Districts, one-to-many with Users</li> </ul> </li> <li> <p>Districts</p> <ul> <li>Attributes: DistrictID, Name, RegionID</li> <li>Relationships: Many-to-one with Regions, one-to-many with Schools</li> </ul> </li> <li> <p>Regions</p> <ul> <li>Attributes: RegionID, Name</li> <li>Relationships: One-to-many with Districts</li> </ul> </li> <li> <p>Tests</p> <ul> <li>Attributes: TestID, Title, Description, CreatedBy (UserID), CreationDate, IsActive</li> <li>Relationships: Many-to-one with Users (CreatedBy), many-to-many with Skills, one-to-many with Questions</li> </ul> </li> <li> <p>Skills</p> <ul> <li>Attributes: SkillID, Name, Description, Category (Enum: ReadingComprehension, Vocabulary)</li> <li>Relationships: Many-to-many with Tests</li> </ul> </li> <li> <p>Questions</p> <ul> <li>Attributes: QuestionID, TestID, Text, Type (Enum: MultipleChoice, FillInTheBlanks, MathProblem), CorrectAnswer, SkillID</li> <li>Relationships: Many-to-one with Tests, many-to-one with Skills</li> </ul> </li> <li> <p>StudentTestResults</p> <ul> <li>Attributes: ResultID, StudentID (UserID), TestID, Score, CompletionDate</li> <li>Relationships: Many-to-one with Users (StudentID), many-to-one with Tests</li> </ul> </li> <li> <p>StudentSkillProgress</p> <ul> <li>Attributes: ProgressID, StudentID (UserID), SkillID, Level, LastUpdated</li> <li>Relationships: Many-to-one with Users (StudentID), many-to-one with Skills</li> </ul> </li> </ol>"},{"location":"DatabaseDesign/#security-and-authentication","title":"Security and Authentication","text":"<ul> <li>User Authentication: Utilize Django Rest Framework SimpleJWT for handling user authentication and authorization. JWT tokens will be used to securely manage user sessions and API access.</li> <li>Domain Whitelisting: Implement domain whitelisting at the application level to ensure that only authorized domains (schools) can access the platform.</li> </ul>"},{"location":"DatabaseDesign/#role-management","title":"Role Management","text":"<ul> <li>Utilize Django's built-in user management system to define custom user roles (Admin, DistrictAdmin, Educator, Student) and permissions. This setup will facilitate secure and role-appropriate access to various platform features.</li> </ul>"},{"location":"DatabaseDesign/#additional-considerations","title":"Additional Considerations","text":"<ul> <li>Indexes: Create indexes on frequently queried fields (e.g., UserID, SchoolID, TestID) to enhance query performance.</li> <li>Normalization: Ensure the database schema is normalized to at least the third normal form (3NF) to reduce redundancy and improve data integrity.</li> <li>Backup and Restoration: Implement regular database backups and test restoration procedures to safeguard against data loss. To develop a detailed database design document for the RCAT Migration project described, which encompasses Django for backend and Next.js for frontend, we'll outline the essential components required for the database schema. This will include tables, relationships, key features, and considerations necessary to support the functionalities and user stories outlined in your project requirements.</li> </ul>"},{"location":"MeetingMinutes/","title":"Meeting Minutes","text":""},{"location":"MeetingMinutes/#date-12th-february-2024","title":"Date: 12th February 2024","text":""},{"location":"MeetingMinutes/#agenda","title":"Agenda","text":"<ul> <li>Review Edu-best Web Application and RCAT UI/UX Analysis</li> <li>Plan of Action for RCAT Codebase Review and New Web Application Development</li> </ul>"},{"location":"MeetingMinutes/#attendees","title":"Attendees","text":"<ul> <li>Rahul Singh</li> <li>Mun Prasad</li> </ul>"},{"location":"MeetingMinutes/#minutes","title":"Minutes","text":"<ul> <li>Rahul presented his initial analysis of the Edu-best Main Website and RCAT, focusing on UI/UX issues.</li> <li>Discussed the need for thorough testing of RCAT at a production level.</li> <li>Rahul explained his plan to deploy RCAT on a local server for an extensive review of the database design and codebase.</li> <li>The meeting outlined a two-week plan of action for codebase review and the development of a new web application using Next.js, Material UI, and Django.</li> </ul>"},{"location":"MeetingMinutes/#action-items","title":"Action Items","text":"<ul> <li>Rahul to review the RCAT codebase from Feb 12-16, focusing on understanding the technical aspects and user requirements.</li> <li>Rahul to draft project requirements and software design for the new web application from Feb 19-23, including setting up the boilerplate for the frontend and backend.</li> <li>U V Prasad to provide necessary support and access to resources for Rahul's review and development process.</li> </ul>"},{"location":"MeetingMinutes/#intros","title":"Intros","text":"<ul> <li>Discussed the importance of using GitHub for version control and issue tracking.</li> <li>Agreed on setting up a discord channel for team communication and a non-code to-do list.</li> <li>Emphasized the need for complete documentation by Feb 20, 2024.</li> </ul>"},{"location":"MeetingMinutes/#date-18th-february-2024","title":"Date: 18th February 2024","text":""},{"location":"MeetingMinutes/#agenda_1","title":"Agenda","text":"<ul> <li>Finalize Project Requirements, Software, and Database Design for New Web Application</li> <li>Address Queries Related to Figma Wireframes and Documentation</li> </ul>"},{"location":"MeetingMinutes/#attendees_1","title":"Attendees","text":"<ul> <li>Rahul Singh</li> <li>Mun Prasad</li> </ul>"},{"location":"MeetingMinutes/#minutes_1","title":"Minutes","text":"<ul> <li>Reviewed the workflow of the new web application and agreed on the technology stack.</li> <li>Addressed queries related to the documentation and low-fidelity wireframes presented by Rahul.</li> <li>Discussed the database design, emphasizing the need for effective relationships and export functionality.</li> </ul>"},{"location":"MeetingMinutes/#action-items_1","title":"Action Items","text":""},{"location":"MeetingMinutes/#intros_1","title":"Intros","text":"<ul> <li>Highlighted the use of Figma for designing the UI/UX of the new web application.</li> <li>Reiterated the importance of GitHub for collaborative development and issue tracking.</li> </ul>"},{"location":"ProjectManagement/","title":"Project Management","text":""},{"location":"ProjectManagement/#mind-map","title":"Mind Map","text":""},{"location":"ProjectManagement/#project-plan","title":"Project Plan","text":""},{"location":"ProjectManagement/#sprint-1-backend-setup-and-user-authentication-mar-1-mar-31","title":"Sprint 1: Backend Setup and User Authentication (Mar 1 - Mar 31)","text":"User Story Story Points Assigned To Due Date Backend setup with Django framework 5 Backend Team Mar 15 Basic frontend setup using Next.js 5 Frontend Team Mar 15 Implement user authentication and authorization 8 Backend Team Mar 31 Initial database schema design with PostgreSQL 7 Backend Team Mar 31 <p>User Story Details: 1. Backend setup with Django framework: Set up the backend infrastructure using Django framework to lay the foundation for the application's core functionalities. Ensure proper configuration of Django with necessary packages.</p> <ol> <li> <p>Basic frontend setup using Next.js: Create a basic frontend structure using Next.js framework. Set up routing and basic UI components to establish the structure for the user interfaces.</p> </li> <li> <p>Implement user authentication and authorization: Develop user authentication and authorization mechanisms using JWT to ensure secure access to different parts of the application based on user roles (admin, educator, student).</p> </li> <li> <p>Initial database schema design with PostgreSQL: Design the initial database schema using PostgreSQL to define the structure of data storage. Establish relationships between different entities such as users, schools, districts, tests, and skills.</p> </li> </ol> <p>Note: This sprint focuses on laying the foundation of the application by setting up the backend infrastructure, implementing user authentication, and designing the initial database schema. This will provide a robust basis for future development.</p>"},{"location":"ProjectManagement/#sprint-2-admin-portal-and-district-management-apr-1-apr-30","title":"Sprint 2: Admin Portal and District Management (Apr 1 - Apr 30)","text":"User Story Story Points Assigned To Due Date Admin portal for school and district management 8 Backend Team Apr 15 Develop API endpoints for adding schools 6 Backend Team Apr 30 Manage districts and regions 7 Backend Team Apr 30 <p>User Story Details: 1. Admin portal for school and district management: Create an admin portal interface for managing schools, districts, and regions. Allow RCAT main admins to add, edit, and delete schools, whitelist domains, and organize districts and regions efficiently.</p> <ol> <li> <p>Develop API endpoints for adding schools: Implement API endpoints to facilitate the addition of new schools to the platform. Ensure proper validation and authentication mechanisms for adding schools securely.</p> </li> <li> <p>Manage districts and regions: Develop functionalities to manage districts and regions within the admin portal. Allow RCAT main admins to create, edit, and organize districts and regions according to geographical or administrative boundaries.</p> </li> </ol> <p>Note: This sprint focuses on building the admin portal and necessary backend functionalities for managing schools, districts, and regions. These features are crucial for efficient platform administration.</p>"},{"location":"ProjectManagement/#sprint-3-test-and-skill-management-may-1-may-31","title":"Sprint 3: Test and Skill Management (May 1 - May 31)","text":"User Story Story Points Assigned To Due Date Manage skills and tests on the platform 8 Backend Team May 15 Create and categorize skills 6 Backend Team May 31 Categorize test questions 7 Backend Team May 31 <p>User Story Details: 1. Manage skills and tests on the platform: Develop functionalities to manage skills and tests available on the platform. Allow RCAT main admins to add, edit, or remove skills and categories related to reading comprehension and vocabulary.</p> <ol> <li> <p>Create and categorize skills: Implement features to add and categorize skills within the platform. Allow admins to create new skills and categorize them based on educational standards and requirements.</p> </li> <li> <p>Categorize test questions: Develop functionalities to categorize test questions by genre (e.g., informational, narrative) to facilitate targeted assessments. Allow admins to categorize questions within tests for better organization and assessment.</p> </li> </ol> <p>Note: This sprint focuses on enhancing the platform's capabilities for managing skills and tests, which are essential for providing relevant and effective assessments to users.</p>"},{"location":"ProjectManagement/#sprint-4-educator-portal-and-assessment-creation-jun-1-jun-30","title":"Sprint 4: Educator Portal and Assessment Creation (Jun 1 - Jun 30)","text":"User Story Story Points Assigned To Due Date Educator portal for assessment creation 8 Frontend Team Jun 15 Select from existing test templates 6 Frontend Team Jun 30 Customize test questions 7 Frontend Team Jun 30 <p>User Story Details: 1. Educator portal for assessment creation: Develop the educator portal interface for creating assessments. Allow educators to select from existing test templates, customize questions, and assign tests to students.</p> <ol> <li> <p>Select from existing test templates: Implement features for educators to select from a pool of existing test templates when creating assessments. Provide options for filtering and searching templates based on various criteria.</p> </li> <li> <p>Customize test questions: Develop functionalities to customize test questions within assessments. Allow educators to add, remove, or modify questions to tailor assessments to their classroom needs.</p> </li> </ol> <p>Note: This sprint focuses on empowering educators with tools for creating and customizing assessments, enhancing their ability to evaluate student progress effectively.</p>"},{"location":"ProjectManagement/#sprint-5-student-portal-and-test-completion-jul-1-jul-31","title":"Sprint 5: Student Portal and Test Completion (Jul 1 - Jul 31)","text":"User Story Story Points Assigned To Due Date Student portal for accessing assessments 8 Frontend Team Jul 15 Access assigned tests 6 Frontend Team Jul 31 Complete online tests 7 Frontend Team Jul 31 <p>User Story Details: 1. Student portal for accessing assessments: Develop the student portal interface for accessing assigned assessments. Provide a user-friendly interface for students to view due dates, instructions, and access assessments.</p> <ol> <li> <p>Access assigned tests: Implement features for students to easily find and access assigned tests within their portal. Ensure clear navigation and intuitive user experience for accessing assessments.</p> </li> <li> <p>Complete online tests: Develop functionalities for students to complete online tests within the platform. Provide tools such as a math editor for solving relevant problems and ensure immediate feedback upon completion.</p> </li> </ol> <p>Note: This sprint focuses on enhancing the student experience by providing a dedicated portal for accessing and completing assessments efficiently.</p>"},{"location":"ProjectManagement/#sprint-6-progress-tracking-and-analytics-aug-1-aug-31","title":"Sprint 6: Progress Tracking and Analytics (Aug 1 - Aug 31)","text":"User Story Story Points Assigned To Due Date Monitor student progress over time 8 Backend Team Aug 15 Generate analytics for class-wide performance 7 Backend Team Aug 31 Identify areas of improvement 6 Backend Team Aug 31 <p>User Story Details: 1. Monitor student progress over time: Develop functionalities to monitor student progress and performance on assessments over time. Provide educators with insights into learning trends and areas for improvement.</p> <ol> <li> <p>Generate analytics for class-wide performance: Implement features to generate analytics and reports on class-wide performance trends. Provide visualizations and insights to educators for better understanding of class performance.</p> </li> <li> <p>Identify areas of improvement: Develop tools to identify areas of improvement and strengths based on student performance data. Provide educators with actionable insights for personalized feedback and support.</p> </li> </ol> <p>Note: This sprint focuses on providing educators with robust tools for tracking student progress and performance, enabling them to make data-driven decisions to enhance teaching and learning.</p>"},{"location":"ProjectManagement/#sprint-7-deployment-and-initial-feedback-sep-1-sep-30","title":"Sprint 7: Deployment and Initial Feedback (Sep 1 - Sep 30)","text":"User Story Story Points Assigned To Due Date Deploy application to production environment 8 DevOps Team Sep 15 Conduct user acceptance testing (UAT) 7 QA Team Sep 30 Gather feedback from users and stakeholders 6 Product Manager Sep 30 <p>User Story Details: 1. Deploy application to production environment: Deploy the RCAT application to the production environment on AWS or Vercel. Ensure proper configuration and optimization for scalability and performance.</p> <ol> <li> <p>Conduct user acceptance testing (UAT): Conduct thorough testing of the deployed application to validate functionality and user experience. Engage users and stakeholders to perform acceptance testing and gather feedback.</p> </li> <li> <p>Gather feedback from users and stakeholders: Collect feedback from users and stakeholders regarding their experience with the platform. Analyze feedback to identify areas for improvement and prioritize enhancements.</p> </li> </ol> <p>Note: This sprint focuses on deploying the application to production, conducting user acceptance testing, and gathering feedback to iteratively improve the platform based on user input.</p>"},{"location":"ProjectManagement/#sprint-8-iterative-improvements-and-enhancements-oct-1-oct-31","title":"Sprint 8: Iterative Improvements and Enhancements (Oct 1 - Oct 31)","text":"User Story Story Points Assigned To Due Date Address feedback and make necessary adjustments 8 Development Team Oct 15 Enhance security measures and perform audits 7 Security Team Oct 31 Implement advanced analytics and reporting tools 6 Backend Team Oct 31 <p>User Story Details: 1. Address feedback and make necessary adjustments: Review user feedback collected during the previous sprint and prioritize necessary adjustments and improvements. Make iterative changes to enhance user experience and address reported issues.</p> <ol> <li> <p>Enhance security measures and perform audits: Strengthen security measures within the application and perform security audits to identify potential vulnerabilities. Ensure compliance with privacy regulations and best practices.</p> </li> <li> <p>Implement advanced analytics and reporting tools: Develop and integrate advanced analytics and reporting tools into the platform. Provide educators with enhanced insights and data visualization capabilities for informed decision-making.</p> </li> </ol> <p>Note: This sprint focuses on iterative improvements based on user feedback, strengthening security measures, and introducing advanced analytics capabilities to further enhance the platform's functionality.</p>"},{"location":"ProjectManagement/#sprint-9-uiux-optimization-and-devops-automation-nov-1-nov-30","title":"Sprint 9: UI/UX Optimization and DevOps Automation (Nov 1 - Nov 30)","text":"User Story Story Points Assigned To Due Date Implement frontend changes based on feedback 8 Frontend Team Nov 15 Continue DevOps tasks for automation 7 DevOps Team Nov 30 Prepare for potential scalability challenges 6 DevOps Team Nov 30 <p>User Story Details: 1. Implement frontend changes based on feedback: Incorporate frontend changes and optimizations based on user feedback and usability testing results. Enhance UI/UX elements to improve user satisfaction and engagement.</p> <ol> <li> <p>Continue DevOps tasks for automation: Automate deployment and operational tasks using CI/CD pipelines and infrastructure as code (IaC) principles. Ensure smooth and efficient deployment processes for ongoing development and updates.</p> </li> <li> <p>Prepare for potential scalability challenges: Assess the platform's scalability requirements and prepare necessary infrastructure and configurations to handle potential scalability challenges. Optimize resource allocation and performance for anticipated growth.</p> </li> </ol> <p>Note: This sprint focuses on optimizing the user interface and experience based on feedback, automating DevOps tasks for efficiency, and preparing the platform for scalability to accommodate future growth.</p>"},{"location":"ProjectManagement/#sprint-10-final-polishing-and-documentation-dec-1-dec-31","title":"Sprint 10: Final Polishing and Documentation (Dec 1 - Dec 31)","text":"User Story Story Points Assigned To Due Date Finalize frontend changes and optimizations 8 Frontend Team Dec 10 Perform thorough testing and bug fixing 7 QA Team Dec 20 Conduct end-of-year review and planning 6 Product Manager Dec 31 <p>User Story Details: 1. Finalize frontend changes and optimizations: Complete any remaining frontend changes and optimizations based on feedback and usability testing. Ensure consistency in design elements and smooth user interactions.</p> <ol> <li> <p>Perform thorough testing and bug fixing: Conduct comprehensive testing of the entire platform to identify and resolve any remaining bugs or issues. Ensure the stability and reliability of the application before the end of the year.</p> </li> <li> <p>Conduct end-of-year review and planning: Review the progress and achievements of the year, gather feedback from the team, and plan for future iterations and enhancements. Identify areas for improvement and set goals for the upcoming year.</p> </li> </ol> <p>Note: This sprint focuses on putting the final touches on the platform, ensuring it is polished and ready for use. It also involves reflecting on the year's accomplishments and planning for future development.</p>"},{"location":"ProjectManagement/#sprint-11-documentation-and-knowledge-transfer-jan-1-jan-15-following-year","title":"Sprint 11: Documentation and Knowledge Transfer (Jan 1 - Jan 15, Following Year)","text":"User Story Story Points Assigned To Due Date Prepare documentation for the platform 8 Documentation Team Jan 10 Conduct knowledge transfer sessions 7 Development Team Jan 15 Address any remaining tasks and cleanup 6 Development Team Jan 15 <p>User Story Details: 1. Prepare documentation for the platform: Create comprehensive documentation covering installation, configuration, usage guides, and API references for the RCAT platform. Ensure documentation is clear, organized, and accessible to all stakeholders.</p> <ol> <li> <p>Conduct knowledge transfer sessions: Facilitate knowledge transfer sessions to ensure the smooth handover of the project to relevant stakeholders, including operations, support, and maintenance teams. Share insights, best practices, and key learnings from the project.</p> </li> <li> <p>Address any remaining tasks and cleanup: Finalize any remaining tasks, perform code cleanup, and ensure all loose ends are tied up before concluding the project. Prepare the platform for handover and maintenance by resolving any outstanding issues.</p> </li> </ol> <p>Note: This sprint focuses on wrapping up the project by documenting key information and transferring knowledge to relevant teams. It ensures a smooth transition and sets the stage for ongoing support and maintenance.</p> <p>Project Name: RCAT Migration to Django and Next.js Duration: March 1st - December 31st</p>"},{"location":"ProjectManagement/#sprint-overview","title":"Sprint Overview:","text":"Sprint Overall Story Points Sprint 1: Backend Setup and User Authentication 25 Sprint 2: Admin Portal and District Management 21 Sprint 3: Test and Skill Management 21 Sprint 4: Educator Portal and Assessment Creation 21 Sprint 5: Student Portal and Test Completion 21 Sprint 6: Progress Tracking and Analytics 21 Sprint 7: Deployment and Initial Feedback 21 Sprint 8: Iterative Improvements and Enhancements 21 Sprint 9: UI/UX Optimization and DevOps Automation 21 Sprint 10: Final Polishing and Documentation 21 Sprint 11: Documentation and Knowledge Transfer 21"},{"location":"ProjectManagement/#sprint-details","title":"Sprint Details:","text":""},{"location":"ProjectManagement/#sprint-1-backend-setup-and-user-authentication","title":"Sprint 1: Backend Setup and User Authentication","text":"<ul> <li>Initial backend setup using Django framework.</li> <li>Implementation of user authentication and authorization.</li> <li>Designing the initial database schema with PostgreSQL.</li> <li>Total Story Points: 25</li> </ul>"},{"location":"ProjectManagement/#sprint-2-admin-portal-and-district-management","title":"Sprint 2: Admin Portal and District Management","text":"<ul> <li>Development of the admin portal for school and district management.</li> <li>Creation of API endpoints for adding schools and managing districts.</li> <li>Implementation of functionalities for managing districts and regions.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-3-test-and-skill-management","title":"Sprint 3: Test and Skill Management","text":"<ul> <li>Management of skills and tests on the platform.</li> <li>Creation and categorization of skills.</li> <li>Categorization of test questions.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-4-educator-portal-and-assessment-creation","title":"Sprint 4: Educator Portal and Assessment Creation","text":"<ul> <li>Development of the educator portal for assessment creation.</li> <li>Implementation of features for selecting test templates and customizing test questions.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-5-student-portal-and-test-completion","title":"Sprint 5: Student Portal and Test Completion","text":"<ul> <li>Creation of the student portal for accessing and completing assessments.</li> <li>Implementation of functionalities for accessing assigned tests and completing online tests.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-6-progress-tracking-and-analytics","title":"Sprint 6: Progress Tracking and Analytics","text":"<ul> <li>Development of functionalities for monitoring student progress over time.</li> <li>Generation of analytics for class-wide performance.</li> <li>Identification of areas of improvement.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-7-deployment-and-initial-feedback","title":"Sprint 7: Deployment and Initial Feedback","text":"<ul> <li>Deployment of the application to the production environment.</li> <li>Conducting user acceptance testing (UAT).</li> <li>Gathering feedback from users and stakeholders.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-8-iterative-improvements-and-enhancements","title":"Sprint 8: Iterative Improvements and Enhancements","text":"<ul> <li>Addressing feedback and making necessary adjustments.</li> <li>Enhancing security measures and performing audits.</li> <li>Implementing advanced analytics and reporting tools.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-9-uiux-optimization-and-devops-automation","title":"Sprint 9: UI/UX Optimization and DevOps Automation","text":"<ul> <li>Implementing frontend changes based on feedback.</li> <li>Continuing DevOps tasks for automation.</li> <li>Preparing for potential scalability challenges.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-10-final-polishing-and-documentation","title":"Sprint 10: Final Polishing and Documentation","text":"<ul> <li>Finalizing frontend changes and optimizations.</li> <li>Performing thorough testing and bug fixing.</li> <li>Conducting end-of-year review and planning.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#sprint-11-documentation-and-knowledge-transfer","title":"Sprint 11: Documentation and Knowledge Transfer","text":"<ul> <li>Preparing documentation for the platform.</li> <li>Conducting knowledge transfer sessions.</li> <li>Addressing any remaining tasks and cleanup.</li> <li>Total Story Points: 21</li> </ul>"},{"location":"ProjectManagement/#total-estimated-development-hours-per-sprint","title":"Total Estimated Development Hours per Sprint:","text":""},{"location":"ProjectManagement/#sprint-1-backend-setup-and-user-authentication_1","title":"Sprint 1: Backend Setup and User Authentication","text":"<ul> <li>Total Estimated Hours: 260</li> </ul>"},{"location":"ProjectManagement/#sprint-2-admin-portal-and-district-management_1","title":"Sprint 2: Admin Portal and District Management","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-3-test-and-skill-management_1","title":"Sprint 3: Test and Skill Management","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-4-educator-portal-and-assessment-creation_1","title":"Sprint 4: Educator Portal and Assessment Creation","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-5-student-portal-and-test-completion_1","title":"Sprint 5: Student Portal and Test Completion","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-6-progress-tracking-and-analytics_1","title":"Sprint 6: Progress Tracking and Analytics","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-7-deployment-and-initial-feedback_1","title":"Sprint 7: Deployment and Initial Feedback","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-8-iterative-improvements-and-enhancements_1","title":"Sprint 8: Iterative Improvements and Enhancements","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-9-uiux-optimization-and-devops-automation_1","title":"Sprint 9: UI/UX Optimization and DevOps Automation","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-10-final-polishing-and-documentation_1","title":"Sprint 10: Final Polishing and Documentation","text":"<ul> <li>Total Estimated Hours: 210</li> </ul>"},{"location":"ProjectManagement/#sprint-11-documentation-and-knowledge-transfer_1","title":"Sprint 11: Documentation and Knowledge Transfer","text":"<ul> <li>Total Estimated Hours: 147</li> </ul> <p>Grand Total Estimated Development Hours: 2427</p>"},{"location":"ProjectManagement/#milestone-1-july-completion","title":"Milestone 1: July Completion","text":""},{"location":"ProjectManagement/#date-july-31st","title":"Date: July 31st","text":""},{"location":"ProjectManagement/#objective","title":"Objective:","text":"<p>Successfully launch the foundational aspects of the RCAT platform, including the backend setup, admin portal, educator and student portals, along with the capabilities for assessment creation and test completion.</p>"},{"location":"ProjectManagement/#key-deliverables","title":"Key Deliverables:","text":"<ol> <li>Backend infrastructure and initial database schema.</li> <li>Admin portal for school and district management.</li> <li>Test and skill management functionalities.</li> <li>Educator portal for assessment creation.</li> <li>Student portal for accessing and completing assessments.</li> </ol>"},{"location":"ProjectManagement/#sprints-included","title":"Sprints Included:","text":"<ul> <li>Sprint 1: Backend Setup and User Authentication</li> <li>Sprint 2: Admin Portal and District Management</li> <li>Sprint 3: Test and Skill Management</li> <li>Sprint 4: Educator Portal and Assessment Creation</li> <li>Sprint 5: Student Portal and Test Completion</li> </ul>"},{"location":"ProjectManagement/#total-estimated-development-hours-1050-hours","title":"Total Estimated Development Hours: 1050 Hours","text":""},{"location":"ProjectManagement/#milestone-2-november-completion","title":"Milestone 2: November Completion","text":""},{"location":"ProjectManagement/#date-november-30th","title":"Date: November 30th","text":""},{"location":"ProjectManagement/#objective_1","title":"Objective:","text":"<p>Enhance the RCAT platform with advanced functionalities including progress tracking, analytics, deployment, iterative improvements, UI/UX optimization, and DevOps automation to ensure a robust, scalable, and user-friendly application.</p>"},{"location":"ProjectManagement/#key-deliverables_1","title":"Key Deliverables:","text":"<ol> <li>Progress tracking and analytics for educators.</li> <li>Deployment of the application to the production environment.</li> <li>Iterative improvements based on initial feedback.</li> <li>UI/UX optimization based on user feedback.</li> <li>DevOps automation for efficient deployment and scalability.</li> </ol>"},{"location":"ProjectManagement/#sprints-included_1","title":"Sprints Included:","text":"<ul> <li>Sprint 6: Progress Tracking and Analytics</li> <li>Sprint 7: Deployment and Initial Feedback</li> <li>Sprint 8: Iterative Improvements and Enhancements</li> <li>Sprint 9: UI/UX Optimization and DevOps Automation</li> </ul>"},{"location":"ProjectManagement/#total-estimated-development-hours-840-hours","title":"Total Estimated Development Hours: 840 Hours","text":"<p>Note: Following the November milestone, the project will enter its final phase focused on polishing, documentation, and knowledge transfer to ensure a smooth handover and prepare for future enhancements.</p> <p>To accommodate the need for a frontend developer during the frontend development phase, we can adjust the project plan by including a section for requesting additional resources. This section will highlight the necessity for additional frontend development support for two months, emphasizing the importance of this role in achieving the project milestones effectively. Let's add this section right before the Project Milestone Document to ensure it's considered in the resource planning and allocation process.</p>"},{"location":"ProjectManagement/#additional-resource-request","title":"Additional Resource Request","text":""},{"location":"ProjectManagement/#request-for-frontend-developer-assistance","title":"Request for Frontend Developer Assistance","text":"<p>Name: Software Team Request: Due to the comprehensive scope of frontend development tasks outlined in the project plan, an additional frontend developer is required to support the project for a duration of two months. This support is specifically needed during the months dedicated to the development of the Educator Portal and Assessment Creation (Sprint 4: Jun 1 - Jun 30) and the Student Portal and Test Completion (Sprint 5: Jul 1 - Jul 31).</p> <p>Justification: The complexity and volume of frontend tasks during these sprints necessitate expert assistance to ensure the timely and quality completion of deliverables. The additional frontend developer will contribute to:</p> <ul> <li>Developing and refining the user interfaces for the Educator and Student Portals.</li> <li>Implementing interactive and user-friendly features for assessment creation, test customization, and test completion.</li> <li>Ensuring the application's responsiveness and accessibility across different devices and platforms.</li> </ul> <p>Outcome: Securing an additional frontend developer for this period will significantly enhance our team's capability to deliver a high-quality, user-centric frontend. This will not only ensure that the project remains on schedule but will also contribute to an engaging and efficient user experience, ultimately supporting the project's success.</p>"},{"location":"SoftwareDesign/","title":"Software Design","text":"<p>This page includes a short description of the overall architecture style of the system, its high-level system components, and their logical (what data they exchange) and control (how they invoke each other) dependencies. Mostly described using diagrams.</p>"},{"location":"SoftwareDesign/#architecture-diagram","title":"Architecture Diagram","text":"<p>A NextJS-Django stack built on Docker and hosted on Cybera. The frontend will be statically built, the django server will be running on a separate container. The server will be running the business and persistence layers. The DB is postgres and will be a docker volume attached to the Django container. In addition emails will be sent through Sendgrid. The frontend will communicate with the backend using REST in JSON (header + body) format. </p> <p></p>"},{"location":"SoftwareDesign/#uml-class-diagram","title":"UML Class Diagram","text":""},{"location":"SoftwareDesign/#sequence-diagrams","title":"Sequence Diagrams","text":""},{"location":"SoftwareDesign/#mind-diagram","title":"Mind Diagram","text":""},{"location":"SoftwareDesign/#high-fidelity-user-interface","title":"High-Fidelity User interface","text":"<p>]()</p>"},{"location":"SoftwareDesign/#technology-list","title":"Technology List","text":""},{"location":"SoftwareDesign/#backend-development","title":"Backend Development","text":""},{"location":"SoftwareDesign/#django","title":"Django","text":"<p>High level Python web framework: https://www.djangoproject.com/</p> <ul> <li>Authentication: Django Rest Framework SimpleJWT</li> <li>DRF SimpleJWT Documentation</li> </ul>"},{"location":"SoftwareDesign/#djoser","title":"djoser","text":"<p>Provides a set of Django Rest Framework views to handle basic authentication actions: https://pypi.org/project/djoser/</p>"},{"location":"SoftwareDesign/#sendgrid","title":"Sendgrid","text":"<p>Email delivery platform: https://sendgrid.com/</p>"},{"location":"SoftwareDesign/#swagger","title":"Swagger","text":"<p>Provides tools for api documentation: https://swagger.io/</p>"},{"location":"SoftwareDesign/#database","title":"Database","text":""},{"location":"SoftwareDesign/#sqlite","title":"SQLite","text":"<p>Lightweight database that is suitable for development: https://www.sqlite.org/index.html</p>"},{"location":"SoftwareDesign/#postgresql","title":"PostgreSQL","text":"<p>Powerful, open source object-relational database system, suitable for production: https://www.postgresql.org/</p>"},{"location":"SoftwareDesign/#frontend-development","title":"Frontend Development","text":"<ul> <li>Framework: Next.js</li> <li>Next.js Documentation</li> <li>State Management: Redux or Context API</li> <li>Redux Documentation</li> <li>React Context Documentation</li> <li>Styling: Tailwind CSS or Styled-Components</li> <li>Tailwind CSS Documentation</li> <li>Styled-Components Documentation</li> </ul>"},{"location":"SoftwareDesign/#jest","title":"Jest","text":"<p>Jest is a testing framework for the frontend: https://jestjs.io/</p>"},{"location":"SoftwareDesign/#cypress","title":"Cypress","text":"<p>Cypress is an e2e testing framework: https://www.cypress.io/</p>"},{"location":"SoftwareDesign/#deployment-and-operations","title":"Deployment and Operations","text":"<ul> <li>Cloud Hosting: AWS or Vercel</li> <li>AWS Documentation</li> <li>Vercel Documentation</li> <li>CI/CD: GitHub Actions</li> <li>GitHub Actions Documentation</li> </ul>"},{"location":"SoftwareDesign/#devops","title":"DevOps","text":""},{"location":"SoftwareDesign/#docker","title":"Docker","text":"<p>Docker is an container application to isolate and deploy applications: https://www.docker.com/</p>"},{"location":"SoftwareDesign/#docker-compose","title":"Docker compose","text":"<p>Extends Docker for running multi-container applications: https://docs.docker.com/compose/</p>"},{"location":"SoftwareDesign/#traefik","title":"traefik","text":"<p>Manages container networks: https://traefik.io/</p>"},{"location":"Teamwork/","title":"Teamwork","text":""},{"location":"Teamwork/#this-is-section-for-future-team-management","title":"this is section for future team management","text":""}]}